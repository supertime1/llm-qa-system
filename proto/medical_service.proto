syntax = "proto3";

package backend;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/supertime1/llm-qa-system/backend-service/src/proto";

message UUID {
    bytes value = 1;
}

// Main Chat Service
service MedicalChatService {
    // Bidirectional streaming for real-time chat
    rpc ChatStream(stream ChatRequest) returns (stream ChatResponse) {}
}

// Main QA service definition
service MedicalQAService {
    // Generate a draft answer for medical questions
    rpc GenerateDraftAnswer (QuestionRequest) returns (QuestionResponse) {}
}

// Request from client (patient/doctor)
message ChatRequest {
    UUID chat_id = 1;          // UUID of the chat session
    UUID sender_id = 2;        // UUID of sender (patient/doctor)
    string content = 3;          // Message content
    Role role = 4;              // Role of sender
    RequestType type = 5;        // Type of request
}

// Response to clients
message ChatResponse {
    UUID chat_id = 1;
    ResponseType type = 2;       // Type of response
    oneof payload {
        Message message = 3;     // Regular chat message
        AIDraft ai_draft = 4;    // AI generated draft
        ReviewUpdate review = 5; // Doctor review status
    }
    google.protobuf.Timestamp timestamp = 6;
}

message Message {
    UUID sender_id = 1;
    string content = 2;
    Role role = 3;
}

message AIDraft {
    string content = 1;
    float confidence_score = 2;
}

message ReviewUpdate {
    ReviewStatus status = 1;
    string modified_content = 2;  // If doctor modifies the answer
}

enum Role {
    ROLE_UNKNOWN = 0;
    ROLE_PATIENT = 1;
    ROLE_DOCTOR = 2;
    ROLE_SYSTEM = 3;
}

enum RequestType {
    REQUEST_UNKNOWN = 0;
    SEND_MESSAGE = 1;      // Regular chat message
    START_CHAT = 2;        // Start new chat session
    JOIN_CHAT = 3;        // Doctor joining chat
    SUBMIT_REVIEW = 4;    // Doctor submitting review
}

enum ResponseType {
    RESPONSE_UNKNOWN = 0;
    NEW_MESSAGE = 1;      // New chat message
    AI_DRAFT_READY = 2;   // AI draft is ready
    DOCTOR_REVIEWING = 3; // Doctor is reviewing
    REVIEW_DONE = 4;      // Final answer ready
    ERROR = 5;           // Error occurred
}

enum ReviewStatus {
    REVIEW_UNKNOWN = 0;
    APPROVED = 1;        // AI draft approved as-is
    MODIFIED = 2;        // AI draft modified
    REJECTED = 3;        // AI draft rejected with new answer
}


message QuestionRequest {
    UUID question_id = 1;
    string question_text = 2;
    UserContext user_context = 3;
}

message UserContext {
    UserInfo user_info = 1;
    repeated BiometricData biometric_data = 2;
    repeated ChatMessage chat_history = 3;
}

message UserInfo {
    string age = 1;
    string gender = 2;
    repeated string medical_history = 3;
}

message BiometricData {
    string type = 1;
    string value = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message ChatMessage {
    string role = 1;
    string content = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message QuestionResponse {
    UUID question_id = 1;
    string draft_answer = 2;
    repeated string references = 3;
    float confidence_score = 4;
}

